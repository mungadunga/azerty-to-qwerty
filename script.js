const AZERTY = {
    "²": "`",
    "&": "1",
    "1": "!",
    "é": "2",
    "2": "@",
    "\"": "3",
    "3": "#",
    "'": "4",
    "4": "$",
    "(": "5",
    "5": "%",
    "-": "6",
    "6": "^",
    "è": "7",
    "7": "&",
    "_": "8",
    "8": "*",
    "ç": "9",
    "9": "(",
    "à": "0",
    "0": ")",
    ")": "-",
    "°": "_",
    "=": "=",
    "+": "+",
    "a": "q",
    'A': 'Q',
    "z": "w",
    'Z': 'W',
    "e": "e",
    'E': "E",
    "r": "r",
    "R": "R",
    "t": 't',
    "T": 'T',
    "y": 'y',
    'Y': 'Y',
    'u': 'u',
    "U": 'U',
    'i': 'i',
    'I': 'I',
    'o': 'o',
    'O': 'O',
    'p': 'p',
    'P': 'P',
    '^': '[',
    '¨': '{',
    '$': ']',
    '£': '}',
    '*': '\\',
    'µ': '|',
    'q': 'a',
    'Q': 'A',
    's': 's',
    'S': 'S',
    'd': 'd',
    'D': 'D',
    'f': 'f',
    'F': 'F',
    'g': 'g',
    'G': 'G',
    'h': 'h',
    'H': 'H',
    'j': 'j',
    'J': 'J',
    'k': 'k',
    'K': 'K',
    'l': 'l',
    'L': 'L',
    'm': ';',
    'M': ':',
    'ù': "'",
    '%': '\"',
    'w': 'z',
    'x': 'x',
    'c': 'c',
    'v': 'v',
    'b': 'b',
    'n': 'n',
    ',': 'm',
    '?': 'M',
    ';': ',',
    '.': '<',
    ':': '.',
    '/': '>',
    '!': '/',
    '§': '?',
    ' ': ' '
};
const QWERTY = {
    "`": "²",
    "1": "&",
    "!": "1",
    "2": "é",
    "@": "2",
    "3": "\"",
    "#": "3",
    "4": "'",
    "$": "4",
    "5": "(",
    "%": "5",
    "6": "-",
    "^": "6",
    "7": "è",
    "&": "7",
    "8": "_",
    "*": "8",
    "9": "ç",
    "(": "9",
    "0": "à",
    ")": "0",
    "-": ")",
    "_": "°",
    "=": "=",
    "+": "+",
    "q": "a",
    'Q': 'A',
    "w": "z",
    'W': 'Z',
    "e": "e",
    'E': "E",
    "r": "r",
    "R": "R",
    "t": 't',
    "T": 'T',
    "y": 'y',
    'Y': 'Y',
    'u': 'u',
    "U": 'U',
    'i': 'i',
    'I': 'I',
    'o': 'o',
    'O': 'O',
    'p': 'p',
    'P': 'P',
    '[': '^',
    '{': '¨',
    ']': '$',
    '}': '£',
    '\\': '*',
    '|': 'µ',
    'a': 'q',
    'A': 'Q',
    's': 's',
    'S': 'S',
    'd': 'd',
    'D': 'D',
    'f': 'f',
    'F': 'F',
    'g': 'g',
    'G': 'G',
    'h': 'h',
    'H': 'H',
    'j': 'j',
    'J': 'J',
    'k': 'k',
    'K': 'K',
    'l': 'l',
    'L': 'L',
    ';': 'm',
    ':': 'M',
    '\'': "ù",
    '\"': '%',
    'z': 'w',
    'x': 'x',
    'c': 'c',
    'v': 'v',
    'b': 'b',
    'n': 'n',
    'm': ',',
    'M': '?',
    '.': ':',
    '<': '.',
    '>': '/',
    '/': '!',
    '?': '§',
    ',': ';',
    ' ': ' '
};
/// <reference path="./replacements.ts" />
const App = () => {
    const [input, setInput] = React.useState('');
    const [keyboard, setKeyboard] = React.useState(true);
    const handleChange = (event) => {
        const value = event.target.value;
        if (keyboard) { // azerty to qwerty
            const newValue = value.split("").map(elem => AZERTY[elem] ? AZERTY[elem] : "~").join("");
            return setInput(newValue);
        } // qwerty to azerty
        const newValue = value.split("").map(elem => QWERTY[elem] ? QWERTY[elem] : "~").join("");
        return setInput(newValue);
    };
    const format = (bool) => bool ? "Azerty" : "Qwerty";
    return (React.createElement("div", { className: "App" },
        React.createElement("p", { style: { textAlign: "center" } }, "Missing  AZERTY characters: <, >"),
        React.createElement("br", null),
        React.createElement("p", { style: { textAlign: "center" } }, "If you see a tilde (~) it means that the character is not found (except for the tilde itself of course)"),
        React.createElement("p", { className: "title" }, `Input: ${format(keyboard)}`),
        React.createElement("textarea", { id: "input", rows: 5, onChange: handleChange }),
        React.createElement("p", { className: "title" }, `Output: ${format(!keyboard)}`),
        React.createElement("textarea", { id: "output", rows: 5, value: input }),
        React.createElement("button", { id: "switch", onClick: () => setKeyboard(!keyboard) }, "Switch")));
};
ReactDOM.render(React.createElement(App, null), document.querySelector("#root"));
